---
- hosts: all
  remote_user: root
  vars_files:
    - vars.yaml
  tasks:
  - name: Install the gpg key for nodejs LTS
    shell: curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
  - name: Install Packages
    apt:
      name: "{{ item }}"
      state: present
    loop:
      - vim 
      - git
      - curl
      - sudo
      - unzip
      - certbot
      - python3-dev
      - python-is-python3
      - nginx 
      - ffmpeg
      - postgresql 
      - postgresql-contrib
      - openssl
      - g++ 
      - make
      - redis-server
      - cron 
      - wget
      - nodejs 
      - python3-psycopg2
  - name: install yarn
    shell: npm install --global yarn
  - name: Create NGINX config file
    template:
      src: nginx.conf.j2
      dest: /etc/nginx/sites-enabled/default
  - name: Create user
    user:
      name: mysuperuser
      home: "{{ root_directory }}"
  - name: Copy html file
    become: true
    become_user: mysuperuser
    copy:
      src: index.html
      dest: "{{ root_directory }}/index.html"
    loop:
      - index.html
      - other.html
  - name: Add the user 'peertube'
    ansible.builtin.user:
      name: peertube
      shell: /bin/bash
      home: /var/www/peertube
      comment: lo peertube
      password: peertube


  - name: Start service redis postgresql
    service:
      name: "{{ item }}"
      state: started
    loop:
      - redis
      - postgresql


  - name: Create user
    become: yes
    become_user: postgres
    community.postgresql.postgresql_user:
      name: peertube
      password: pertube
      role_attr_flags: CREATEDB,SUPERUSER


  - name: Create db 
    become: yes
    become_user: postgres
    community.postgresql.postgresql_db:
      name: peertube_prod
      encoding: UTF-8
      template: template0
      owner: peertube

  - name: extensiones one
    become: yes
    become_user: postgres
    community.postgresql.postgresql_ext:
      name: "{{ item }}" 
      db: peertube_prod
    loop:
      - pg_trgm
      - unaccent
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: '/var/www/peertube/{{ item }}'
      owner: peertube
      state: directory
      mode: '0777'
    loop:
      - config
      - storage
      - versions
  - name: extract
    become: yes
    become_user: peertube
    ansible.builtin.unarchive:
      src: https://github.com/Chocobozzz/PeerTube/releases/download/v4.1.1/peertube-v4.1.1.zip
      dest: /var/www/peertube/versions/
      remote_src: yes
        

